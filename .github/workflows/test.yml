name: Test Action

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      test-repository-name:
        description: 'Name of the test repository to create/check'
        required: false
        default: 'test-action-repo'
      aws-region:
        description: 'AWS region for testing'
        required: false
        default: 'us-east-1'

jobs:
  test-action:
    runs-on: ubuntu-latest
    # Only run if AWS credentials are available (will be skipped in forks)
    if: ${{ github.repository == 'KoalaOps/ensure-ecr-repository' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws-region || 'us-east-1' }}

      - name: Test - Ensure ECR Repository Exists (First Run)
        id: test-first-run
        uses: ./
        with:
          repository-name: ${{ github.event.inputs.test-repository-name || 'test-action-repo' }}
          aws-region: ${{ github.event.inputs.aws-region || 'us-east-1' }}

      - name: Validate first run outputs
        run: |
          echo "Repository existed: ${{ steps.test-first-run.outputs.repository-exists }}"
          echo "Repository URI: ${{ steps.test-first-run.outputs.repository-uri }}"
          
          # Verify outputs are not empty
          if [ -z "${{ steps.test-first-run.outputs.repository-uri }}" ]; then
            echo "❌ Repository URI output is empty"
            exit 1
          fi
          
          # URI should contain the repository name
          if [[ "${{ steps.test-first-run.outputs.repository-uri }}" != *"${{ github.event.inputs.test-repository-name || 'test-action-repo' }}"* ]]; then
            echo "❌ Repository URI doesn't contain repository name"
            exit 1
          fi
          
          echo "✅ First run outputs validated"

      - name: Test - Ensure ECR Repository Exists (Second Run - Idempotent)
        id: test-second-run
        uses: ./
        with:
          repository-name: ${{ github.event.inputs.test-repository-name || 'test-action-repo' }}
          aws-region: ${{ github.event.inputs.aws-region || 'us-east-1' }}

      - name: Validate second run outputs (should be idempotent)
        run: |
          echo "Repository existed: ${{ steps.test-second-run.outputs.repository-exists }}"
          echo "Repository URI: ${{ steps.test-second-run.outputs.repository-uri }}"
          
          # Second run should indicate repository existed
          if [ "${{ steps.test-second-run.outputs.repository-exists }}" != "true" ]; then
            echo "❌ Second run should indicate repository existed"
            exit 1
          fi
          
          # URIs should be identical
          if [ "${{ steps.test-first-run.outputs.repository-uri }}" != "${{ steps.test-second-run.outputs.repository-uri }}" ]; then
            echo "❌ Repository URIs don't match between runs"
            exit 1
          fi
          
          echo "✅ Second run validated - action is idempotent"

      - name: Test - Invalid repository name (should fail)
        id: test-invalid
        continue-on-error: true
        uses: ./
        with:
          repository-name: "INVALID_REPO_NAME_WITH_CAPS_AND_UNDERSCORES"
          aws-region: ${{ github.event.inputs.aws-region || 'us-east-1' }}

      - name: Validate error handling
        run: |
          # The previous step should have failed
          if [ "${{ steps.test-invalid.outcome }}" != "failure" ]; then
            echo "❌ Invalid repository name should have caused failure"
            exit 1
          fi
          
          echo "✅ Error handling validated"

  test-syntax:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test action.yml syntax
        run: |
          # Basic YAML syntax check
          python3 -c "import yaml; yaml.safe_load(open('action.yml'))"
          echo "✅ action.yml syntax is valid"

      - name: Test required fields
        run: |
          # Check that action.yml has required fields
          if ! grep -q "name:" action.yml; then
            echo "❌ Missing 'name' field in action.yml"
            exit 1
          fi
          
          if ! grep -q "description:" action.yml; then
            echo "❌ Missing 'description' field in action.yml"
            exit 1
          fi
          
          if ! grep -q "runs:" action.yml; then
            echo "❌ Missing 'runs' field in action.yml"
            exit 1
          fi
          
          echo "✅ action.yml has required fields" 